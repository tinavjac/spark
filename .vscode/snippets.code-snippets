{
  "React functional component": {
    "scope": "typescriptreact,typescript",
    "prefix": "fc",
    "body": [
      "import React from 'react'",
      "import { View } from 'react-native'",
      "",
      "type TProps = {",
      "\t${2}",
      "}",
      "",
      "export const ${1:$TM_FILENAME_BASE}: React.FC<TProps> = ({}) => {",
      "\t$5",
      "\t",
      "\treturn (",
      "\t\t<View></View>",
      "\t)",
      "}",
    ],
    "description": "React functional component with children",
  },
  "React functional memo component": {
    "scope": "typescriptreact,typescript",
    "prefix": "fmc",
    "body": [
      "import React, {memo} from 'react'",
      "import { View } from 'react-native'",
      "",
      "type TProps = {",
      "\t${2}",
      "}",
      "",
      "export const ${1:$TM_FILENAME_BASE}: React.FC<TProps> = memo(({}) => {",
      "\t$5",
      "\t",
      "\treturn (",
      "\t\t<View></View>",
      "\t)",
      "})",
    ],
    "description": "Memoized react functional component",
  },
  "React functional screen component": {
    "scope": "typescriptreact,typescript",
    "prefix": "fsc",
    "body": [
      "import React from 'react'",
      "import { View } from 'react-native'",
      "",
      "const __Screen = () => {",
      "\t$5",
      "\t",
      "\treturn (",
      "\t\t<View></View>",
      "\t)",
      "}",
      "",
      "export default __Screen",
    ],
    "description": "React functional component used as app screen",
  },
  "API endpoint with types": {
    "scope": "typescriptreact,typescript",
    "prefix": "end",
    "body": [
      "export interface I${TM_FILENAME_BASE/(^.)/${1:/capitalize}/} {",
      "\t${1}",
      "}",
      "",
      "export interface I${TM_FILENAME_BASE/(^.)/${1:/capitalize}/}QueryParams {",
      "\t${2}",
      "}",
      "",
      "export type T${TM_FILENAME_BASE/(^.)/${1:/capitalize}/}Response = I${TM_FILENAME_BASE/(^.)/${1:/capitalize}/}[] | IResponseFailure",
      "",
      "// type guards",
      "export const is = () => {",
      "}",
      "export const ${TM_FILENAME_BASE/(.*)/${1:/upcase}/}_ENDPOINT = \"${3}\"",
    ],
    "description": "Defining endpoint and return type",
  },
  "React custom hook": {
    "scope": "javascript,typescript,typescriptreact",
    "prefix": "exch",
    "body": ["export const ${TM_FILENAME_BASE/(^.)/${1:/lowercase}/} = () => {", "\t${1}", "}"],
    "description": "export custom hook",
  },
}
